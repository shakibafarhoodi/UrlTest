@using Domin.Model
@model CreateUrlViewModel

<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dynamic URL Table</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/bootstrap-4.3.1-dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel='stylesheet' href='https://pro.fontawesome.com/releases/v5.2.0/css/all.css'>
    <link rel="stylesheet" href="~/css/Css_Importent/style.css">
    <style>
        .form-container {
            border: 1px solid #3f51b575;
            padding: 20px;
            border-radius: 10px;
            background-color: #f9f9f9;
            margin-bottom: 20px;
        }

        .upload-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .upload-button {
            width: 48%;
        }

        .hidden {
            display: none;
        }

        .dropdown-container {
            position: relative;
        }

            .dropdown-container select {
                width: 100%;
                padding-right: 30px;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }

            .dropdown-container .dropdown-icon {
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
                pointer-events: none;
                color: #3F51B5;
                margin-top: 10px;
            }

        .floating-menu {
            position: fixed;
            bottom: 20px;
            left: 20px;
        }

        .circle {
            width: 60px;
            height: 60px;
            background-color: #3b5998;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .hamburger {
            width: 30px;
            height: 24px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .bar {
            width: 100%;
            height: 4px;
            background-color: white;
        }

        nav.nav {
            display: none;
        }

        #toggle:checked ~ nav.nav {
            display: block;
        }

        #toggle {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container" style="margin-top:320px">
        <div class="table-container">
            <div class="row" style="margin-top:20px;">
                <div class="col-sm-8" style="font-family:Exo;color:#3b5998">URL Table</div>
                <div class="col-sm-3" style="display: flex; flex-direction: column; align-items: center;">
                    <form asp-action="Logout" asp-controller="Account" method="post" style="display: flex; align-items: center;">
                        <img src="~/Img/Icon_logout.gif" alt="Avatar Animation" style="width: 30px; height: 30px; margin-right: 5px;">
                        <button class="btn btn-outline" style="font-size: 12px; direction:rtl;color:#3b5998">Log Out</button>
                    </form>
                </div>
            </div>

            <br />
            <div id="successMessage" class="alert alert-success" style="display:none;"></div>
            <div id="errorMessage" class="alert alert-danger" style="display:none;"></div>
            <form id="urlForm" method="post" class="contact-us-form form-container" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="form-group dropdown-container">
                    <label for="inputType">Select Input Type</label>
                    <select id="inputType" class="form-control">
                        <option value="">Choose...</option>
                        <option value="url">URL</option>
                        <option value="image">Image</option>
                    </select>
                    <i class="ri-arrow-down-s-line dropdown-icon"></i>
                </div>
                <div id="formFields" class="hidden">
                    <div class="form-group">
                        <input asp-for="Url" type="text" id="urlInput" class="form-control" placeholder="Enter URL">
                    </div>
                    <div class="form-group">
                        <input asp-for="ImgFile" type="file" id="imgInput" class="form-control" placeholder="Upload Image">
                    </div>
                    <div class="form-group">
                        <input asp-for="Time" type="number" id="timeInput" class="form-control" placeholder="Enter time in milliseconds" required>
                    </div>
                    <div class="form-group">
                        <label for="priorityInput">Priority</label>
                        <input asp-for="Priority" type="number" id="priorityInput" class="form-control" placeholder="Enter Priority">
                    </div>

                    <button type="submit" class="btn btn-primary" style="width:100px;background-image:linear-gradient(195deg, #d3d6ee 0%, #07115cd1 100%);border: none;">Add</button>
                </div>
                <span asp-validation-for="Url" class="text-danger"></span>
                <span asp-validation-for="Time" class="text-danger"></span>
                <div id="validationMessage" class="error-message"></div>
            </form>
            <div id="listUrlComponentContainer">
                @await Component.InvokeAsync("ListUrlComponent")
            </div>
        </div>
    </div>
    <div class="wrapper">
        <input type="checkbox" id="toggle" />
        <label for="toggle" class="fab"><img src="../css/Css_Importent/png_3qj3h.png" alt="FAB Icon"></label>
        <div class="fac">
            <a asp-controller="Url" asp-action="index" target="_blank"><i class="fas fa-home"></i></a>
            <a asp-controller="Url" asp-action="CreateUrl" target="_blank"><i class="far fa-cog"></i></a>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#inputType').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue) {
                    $('#formFields').removeClass('hidden');
                    if (selectedValue == 'url') {
                        $('#urlInput').show();
                        $('#imgInput').hide();
                    } else {
                        $('#urlInput').hide();
                        $('#imgInput').show();
                    }
                } else {
                    $('#formFields').addClass('hidden');
                }
            });

            $('#urlForm').on('submit', function (e) {
                e.preventDefault();

                var inputType = $('#inputType').val();
                var urlInput = $('#urlInput').val();
                var timeInput = $('#timeInput').val();
                var imgFile = $('#imgInput')[0].files[0];
                var priorityInput = $('#priorityInput').val();
                var validationMessage = $('#validationMessage');
                var successMessage = $('#successMessage');
                var errorMessage = $('#errorMessage');

                validationMessage.text('').hide();
                successMessage.hide();
                errorMessage.hide();

                if (!inputType) {
                    validationMessage.text('Please select an input type.').show();
                    return;
                }

                if (inputType == 'url' && !urlInput) {
                    validationMessage.text('Please enter a URL.').show();
                    return;
                }

                if (inputType == 'image' && !imgFile) {
                    validationMessage.text('Please upload an image.').show();
                    return;
                }

                if (!timeInput) {
                    validationMessage.text('Please enter a time in milliseconds.').show();
                    return;
                }

                var token = $('input[name="__RequestVerificationToken"]').val();

                var formData = new FormData();
                formData.append("Time", timeInput);
                formData.append("Priority", priorityInput)
                if (inputType == 'url') {
                    formData.append("Url", urlInput);
                } else {
                    formData.append("ImgFile", imgFile);
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateUrl", "Url")',
                    data: formData,
                    contentType: false,
                    processData: false,
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (response) {
                        if (response.success) {
                            successMessage.text(response.message).show();
                            setTimeout(function () {
                                successMessage.fadeOut();
                            }, 3000);

                            refreshUrlList();
                        } else {
                            errorMessage.text(response.message).show();
                            setTimeout(function () {
                                errorMessage.fadeOut();
                            }, 3000);
                        }
                    },
                    error: function (xhr, status, error) {
                        errorMessage.text("An error occurred while processing your request. Please try again.").show();
                        setTimeout(function () {
                            errorMessage.fadeOut();
                        }, 3000);
                    }
                });

                function refreshUrlList() {
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("ListUrlComponent", "Url")',
                        success: function (result) {
                            $('#listUrlComponentContainer').html(result);
                        },
                        error: function (xhr, status, error) {
                            console.error("Error refreshing URL list:", error);
                        }
                    });
                }

                $('#urlInput').val('');
                $('#imgInput').val('');
                $('#timeInput').val('');
                $('#priorityInput').val('');
            });

            $('#urlInput, #timeInput, #imgInput').on('click', function () {
                $(this).val('');
            });
        });
        function checkSession() {
            fetch('/Account/CheckSession')
                .then(response => {
                    if (response.status === 401) {
                        window.location.href = '/Account/Login';
                    }
                })
                .catch(error => {
                    console.error('Error checking session:', error);
                });
        }

        setInterval(checkSession, 5000);
    </script>
</body>
</html>
